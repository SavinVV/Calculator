{"version":3,"sources":["components/app/app.js","components/btn/btn.js","components/workspace-row/index.js","components/workspace-row/workspace-row.js","components/workspace/workspace.js","components/workspace/index.js","components/display/display.js","components/display/index.js","components/app/index.js","index.js"],"names":["App","props","resultIsCalculated","state","equationList","onClickBtn","bind","work","symbol","newEquationList","this","firstNumber","isNaN","resetEquation","indexLastSymbol","length","togglePoint","res","calculateResult","processPercentSign","processPlusMinusSign","eval","join","setState","reedNumberInState","array","addDigitInNumber","digit","index","number","String","numberModule","slice","divisionByZero","Infinity","percentOfTheNumber","togglePlusMinusSign","indexNumberInEquation","indexPoint","indexOf","str","className","data","Component","Btn","val","color","onClick","WorkspaceRow","row","btns","map","item","Workspace","workspaceRows","handleKeyPress","Display","fontSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb8c78ae.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport Display from '../display';\r\nimport Workspace from '../workspace';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            equationList: ['0'],\r\n        }\r\n        this.onClickBtn = this.onClickBtn.bind(this);\r\n    }\r\n\r\n    resultIsCalculated = false;\r\n\r\n    work(symbol) {\r\n        let newEquationList = this.state.equationList;\r\n        let firstNumber = newEquationList[0];\r\n        if (!isNaN(symbol) || symbol === '.') {\r\n            if (firstNumber === 'Деление на ноль невозможно') {\r\n                newEquationList = []\r\n                this.resultIsCalculated = false;\r\n            }\r\n            this.reedNumberInState(symbol, newEquationList);\r\n        } else {\r\n            if (firstNumber === 'Деление на ноль невозможно' && symbol !== 'C') {\r\n                return;\r\n            }\r\n            if (symbol === 'x') {\r\n                symbol = '*'\r\n            }\r\n            if (symbol === 'C') {\r\n                this.resetEquation();\r\n                return ;\r\n            }\r\n            const indexLastSymbol = firstNumber.length - 1;\r\n            if (firstNumber[indexLastSymbol] === '.') {\r\n                firstNumber = this.togglePoint(firstNumber);\r\n                newEquationList[0] = firstNumber;\r\n            }\r\n            if (symbol === '=') {\r\n                if (newEquationList.length < 3) {\r\n                    newEquationList = [firstNumber];\r\n                } else {\r\n                    const res = this.calculateResult();\r\n                    newEquationList = [res];\r\n                }\r\n                this.resultIsCalculated = true;\r\n            } else if (symbol === '%') {\r\n                newEquationList = this.processPercentSign();\r\n            } else if (symbol === '+/-') {\r\n                newEquationList = this.processPlusMinusSign();\r\n            } else if (newEquationList.length === 3) {\r\n                const res = eval(newEquationList.join(''));\r\n                newEquationList = [res, symbol];\r\n            } else {\r\n                newEquationList[1] = symbol;\r\n                this.resultIsCalculated = false;\r\n            }\r\n            this.setState(() => {\r\n                return {\r\n                    equationList: newEquationList\r\n                };\r\n            });\r\n        }\r\n \r\n    }\r\n\r\n    reedNumberInState(symbol, array) {\r\n        if (array.length < 2) {\r\n            this.addDigitInNumber(array, symbol, 0);\r\n        } else {\r\n            this.addDigitInNumber(array, symbol, 2);\r\n        }\r\n        this.setState(() => {\r\n            return {\r\n                equationList: array\r\n            };\r\n        });\r\n    }\r\n\r\n    addDigitInNumber(array, digit, index) {\r\n        let number = array[index];\r\n        if (typeof(number) !== 'undefined' && number.length === 9) {\r\n            return;\r\n        }\r\n        if (digit === '.') {\r\n            if (this.resultIsCalculated || typeof(number) === 'undefined') {\r\n                number = '0.'\r\n                this.resultIsCalculated = false;\r\n            } else {\r\n                number = this.togglePoint(number);\r\n            }\r\n        } else if (number === '0' || typeof(number) === 'undefined') {\r\n            number = String(digit);\r\n        } else if (this.resultIsCalculated) {\r\n            number = String(digit);\r\n            this.resultIsCalculated = false;\r\n        } else {\r\n            if (index === 0) {\r\n                number = number + digit;\r\n            } else {\r\n                if (number[0] !== '(') {\r\n                    number = number + digit;\r\n                } else {\r\n                    const numberModule = number.slice(2, number.length - 1);\r\n                    number = `(-${numberModule}${digit})`;\r\n                }\r\n            }\r\n        }\r\n        array[index] = number;\r\n    }\r\n\r\n    calculateResult() {\r\n        let {equationList} = this.state;\r\n        const res = eval(equationList.join(''));\r\n        const divisionByZero = (res === Infinity || res === -Infinity ||  isNaN(res));\r\n        if (divisionByZero) {\r\n            return 'Деление на ноль невозможно';\r\n        }\r\n        return res;\r\n    }\r\n\r\n    resetEquation () {\r\n        this.setState(() => {\r\n            return {\r\n                equationList: ['0']\r\n            }\r\n        });\r\n    }\r\n\r\n    processPercentSign() {\r\n        let newEquationList = this.state.equationList;\r\n        let percentOfTheNumber;\r\n        if (newEquationList.length === 3) {\r\n            percentOfTheNumber = newEquationList[0] * newEquationList[2] / 100;\r\n            newEquationList[2] = percentOfTheNumber;\r\n        } else if (newEquationList.length === 2) {\r\n            percentOfTheNumber = newEquationList[0] * newEquationList[0] / 100;\r\n            newEquationList[2] = percentOfTheNumber;\r\n        } else {\r\n            newEquationList = ['0'];\r\n        }\r\n        return newEquationList;\r\n    }\r\n\r\n    processPlusMinusSign() {\r\n        let newEquationList = this.state.equationList;\r\n        if (newEquationList.length < 2) {\r\n            newEquationList[0] = this.togglePlusMinusSign(newEquationList[0]);\r\n        } else if (newEquationList.length > 2) {\r\n            newEquationList[2] = this.togglePlusMinusSign(newEquationList[2], 2);\r\n        }\r\n        return newEquationList;\r\n    }\r\n\r\n    togglePlusMinusSign(number, indexNumberInEquation) {\r\n        number = String(number);\r\n        if (indexNumberInEquation === 2) {\r\n            if (number[0] === '(') {\r\n                number = number.slice(2, number.length - 1);\r\n            } else if (eval(number) !== 0) {\r\n                number = `(-${number})`;\r\n            }  \r\n        } else {\r\n            if (number[0] === '-') {\r\n                number = number.slice(1)\r\n            } else if  (number !== '0') {\r\n                number = `-${number}`;\r\n            }\r\n        }\r\n        return number;\r\n    }\r\n\r\n    togglePoint(number) {\r\n        const indexPoint = number.indexOf('.');\r\n        const indexLastSymbol = number.length - 1;\r\n        if (indexPoint < 0) {\r\n            if (number.indexOf(')') > 0) {\r\n                number = `${number.slice(0, indexLastSymbol)}.)`;\r\n            } else {\r\n                number = number + '.';\r\n            }\r\n        } else if (indexPoint === indexLastSymbol) {\r\n            number = number.slice(0, indexLastSymbol);\r\n        } else if (indexPoint === indexLastSymbol - 1 && number[indexLastSymbol] === ')') {\r\n            number = `${number.slice(0, indexLastSymbol - 1)})`;\r\n        }\r\n        return number;\r\n    }\r\n\r\n    onClickBtn(symbol) {\r\n        this.work(symbol);\r\n    }\r\n\r\n    render() {\r\n        \r\n        const str = this.state.equationList.join('');\r\n        return (\r\n            <div className='app'>\r\n                <Display\r\n                    data={str}/>\r\n                <Workspace\r\n                    onClickBtn={this.onClickBtn}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport './btn.css'\r\n\r\nconst Btn = (props) => {\r\n\r\n    const val = props.val;\r\n    let color = 'blue';\r\n    if (['C', '+/-', '%'].indexOf(val) > -1) {\r\n        color = 'silver'\r\n    } else if (['/', '+', '-', 'x'].indexOf(val) > -1) {\r\n        color = 'purple'\r\n    } else if (val === '=') {\r\n        color = 'green'\r\n    } else if (val === 0) {\r\n        color = 'big'\r\n    }\r\n    return (\r\n        <button \r\n            key={val} \r\n            className={color}\r\n            onClick={props.onClickBtn}>{val}</button>\r\n    )\r\n}\r\n\r\nexport default Btn;\r\n","import WorkspaceRow from \"./workspace-row\";\r\nexport default WorkspaceRow;","import React from 'react';\r\n\r\nimport Btn from '../btn/btn';\r\n\r\nimport './workspace-row.css';\r\n\r\nconst WorkspaceRow = ({row, onClickBtn}) => {\r\n    const btns = row.map(item => {\r\n        return (\r\n            <Btn\r\n                key={item}\r\n                val={item}\r\n                onClickBtn={() => onClickBtn(item)}/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='row'>\r\n            {btns}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkspaceRow;","import React from 'react';\r\n\r\nimport WorkspaceRow from '../workspace-row';\r\n\r\nimport './workspace.css'\r\n\r\nconst Workspace = ({onClickBtn, handleKeyPress}) => {\r\n    const rows = [\r\n        ['C', '+/-', '%', '/'],\r\n        [7, 8, 9, 'x'],\r\n        [4, 5, 6, '-'],\r\n        [1, 2, 3, '+'],\r\n        [0, '.', '=']\r\n    ]\r\n    const workspaceRows = rows.map((row, index) => {\r\n        return (\r\n            <WorkspaceRow\r\n                key={index}\r\n                row={row}\r\n                onClickBtn={onClickBtn}/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='workspace'>\r\n            <div className='workspace__inner'>\r\n                {workspaceRows}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Workspace;","import Workspace from \"./workspace\";\r\nexport default Workspace;","import React from 'react';\r\n\r\nimport './display.css';\r\n\r\nconst Display = ({data}) => {\r\n  let fontSize;\r\n  if (data === 'Деление на ноль невозможно') {\r\n    fontSize = 'division_by_zero';\r\n  } else if (data.length > 10) {\r\n    fontSize = 'little';\r\n  }\r\n\r\n  return (\r\n    <div className=\"display\">\r\n      <p className={fontSize}>{data}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Display;","import Display from './display';\r\nexport default Display;","import App from './app';\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}